<head>
<head>
<body>
<stripes:layout-component>
<script>
/
name=
stripes:layout-render
<stripes:layout-components>
<stripes:layout-render>
<stripes:layout-render>
pageTitle
pageContent
<stripes:layout-render>
<stripes:layout-definition>
<stripes:layout-component>
inputs
buttons
results
<stripes:layout-component>
@EJB
@Inject
@Resource
StripesFilter
web.xml
Interceptor.Classes
@EJBBean
bugManager
bugManager
EJBInterceptor.findEJB()
irc.freenode.net#stripes
LocalePicker
LocalePicker
HttpServletRequestWrapper
request.getLocale()
request.getLocales()
request.getLocale[s]()
fmt:*
DefaultLocalePicker
java.util.Locale.getDefault()
DefaultLocalePicker
DefaultLocalePicker
pickLocale()
StripesResources
StripesResources.properties
StripesResources_en_US.properties
DefaultLocalizationBundleFactory
java.text
0} is a required field
action="/security/login.action"
user.password
Validatable
<stripes:button.../>, <stripes:submit.../> and <stripes:reset.../>
<stripes:label.../>
value
value
<fmt:setLocale.../>
<fmt:message>
request.getLocale()
<fmt:setLocale value="${pageContext.request.locale}"/>
<fmt:message>
LocalizedUtility.getLocalizedFieldName(...)
StripesResources.properties
@Intercepts
ExecutionContext.proceed()
Extension.Packages
BeforeAfterMethodInterceptor
ExecutionContext
ActionBean
ActionBeanContext
HttpServletRequest
SpringInterceptorSupport
Interceptor
HttpServletRequest.getLocale()
multipart/form-data
@DontValidate
@DontValidate
DefaultActionBeanPropertyBinder
ValidationErrorHandler
handleValidationErrors(errors)
Resolution
handleValidationErrors()
execute()
ActionBean
MyAbstractActionBeanContext
MyActionBeanContext
User
Map
MockServletContext
@Configuration(beforeSuite=true)
MockRoundtrip
MockRoundtrip
MockRoundtrip
MockServletContext
@UrlBinding
MockHttpSession
MockRoundtrip
MockHttpSession
MockRoundtrip
setParameter()
addParameter
trip.execute()
MockRoundtrip
execute()
<stripes:form>
MockRoundtrip
MockRoundtrip.setSourcePage(String url)
MockRoundtrip
getOutputBytes()
MockServletContext
field1, field2, field3
MockServletContext
formatType
formatPattern
formatType
java.util.Date
formatPattern
java.text.Format
formatType
formatPattern
Formatter
NumberFormatter
DateFormatter
java.text.NumberFormat
java.text.DateFormat
java.util.Date
formatType
formatPattern
DateFormat.SHORT
DateFormat.MEDIUM
DateFormat.LONG
DateFormat.FULL
formatType
formatPattern
Number.toString()
StripesFilter.getConfiguration().getFormatterFactory()
FormatterFactory
DefaultFormatterFactory
getFormatter()
super.getFormatter()
FormatterFactory
Formatter
Locale
formatType
formatPattern
dist/spring.jar
WEB-INF/lib
spring-*
dist
spring.jar
web.xml
web.xml
listener
/WEB-INF/spring-context.xml
WEB-INF
web.xml
Interceptor.Classes
@SpringBean
bugManager
bugManager
/bugzooky/BugManager
BugManager
public void setBugManager(...)
@SpringBean("/some/bean")
injectBugManager()
set
public void bugManager(BugManager mgr)
@SpringBean
ActionBeanContext
ServletContext
ApplicationContext
SpringHelper.injectBeans(obj, StripesFilter.getConfiguration().getServletContext());
com.companyz.accounts.ui.ledger.GeneralLedgerActionBean
/ledger/GeneralLedger.do
getUrlBinding(String className)
@HandlesEvent
Money
Money
ValidationError
SimpleError
LocalizableError
ScopedLocalizableError
ScopedLocalizableError
MessageFormat
@Validate
@ValidateNestedProperties
@Validate
@Validate
@Validate
@Validate
@ValidateNestedProperties
validation.required
valueNotPresent
@Validate
required
required
@DontValidate
validation.minlength
valueTooShort
validation.maxlength
valueTooLong
validation.minvalue
valueBelowMinimum
validation.maxvalue
valueAboveMaximum
Pattern.matcher(input).matches()
validation.mask
valueDoesNotMatch
validation.expression
valueFailedExpression
@Validate
converter
TypeConverter
TypeConverterFactory
java.util.Date
converter.date
invalidDate
converter.email
invalidEmail
converter.enum
notAnEnumeratedValue
converter.number
invalidNumber
converter.[byte|short|integer|float]
outOfRange
float
double
BigDecimal
converter.number
invalidNumber
OneToManyTypeConverter
OneToManyTypeConverter
LongTypeConverter
BooleanTypeConverter
@ValidationMethod
@Validate
ValidationErrors
getContext().getValidationErrors()
@Validate
@ValidationMethod
@DontValidate
@DontValidate
@DontValidate
Resolution
ActionBeanContext.getSourcePageResolution()
ForwardResolution
_sourcePage
ActionBeanContext.getSourcePageResolution()
handleValidationErrors(ValidationErrors errors)
ValidationErrors
field-metadata
script
@Wizard
web.xml
web.xml
struts.xml
struts.properties
ActionBean
execute()
Action
ActionSupport
Resolution
String
result
struts.xml
@Validate
@ValidateNestedProperties
when=ValidationState.ALWAYS
Validation.InvokeValidateWhenErrorsExist
short-circuit="true"
<field-validator>
@ValidationMethod
ValidatorSupport
FieldValidatorSupport
validators.xml
${actionBean
ValueStack
TypeConverter<T>
ognl.TypeConverter
StrutsTypeConverter
Formatter<T>
ognl.TypeConverter
StrutsTypeConverter
Extension.Packages
struts.xml
Interceptor
@Before
@After
Interceptor
struts.xml
ActionBean
ActionResolver.Packages
public String execute()
Action
struts.xml
public Resolution methodName()
name=
event=
execute()
struts.xml
Resolution
Resolution
execute()
String
struts.xml
TypeConverter<T>
T
T
Extension.Packages
@Validate(converter=YourTypeConverter.class)
ognl.TypeConverter
StrutsTypeConverter
Object
T
xwork-conversion.properties
T
ActionName-conversion.properties
ActionName
Interceptor
@Intercepts
Extension.Packages
web.xml
Interceptor
struts.xml
void
AsyncResponse
asyncResponse.complete()
LifecycleStage[]
LifecycleStage[]
@Resource
@Resource
@EJB
mappedName
@EJB
mappedName
name
@Resource
Extension.Packages
<stripes:useActionBean/>
DEBUG
TRACE
INFO
DEBUG
net.sourceforge.stripes
DEBUG
DEBUG
INFO
INFO
WARNING
ServletException
StripesServletException
DefaultExceptionHandler
Resolution
DefaultExceptionHandler
Exception
DefaultExceptionHandler
AutoExceptionHandlers
DelegatingExceptionHandler
AutoExceptionHandler
DelegatingExceptionHandler.Packages
Extension.Packages
ExceptionHandler
DefaultExceptionHandler
ExceptionHandler.Class
ExceptionHandler
ActionBean
ActionBeanContext
AutoExceptionHandler
ActionBean
ActionBean
ActionBean
ActionBean
ActionBeanContext
ValidationErrors
getMessages()
true
web.xml
web.xml
StripesFilter
Extension.Packages
.*
net.sourceforge.stripes.extensions
<stripes:errors/>
<stripes:form>
<stripes:errors/>
action
StripesResources
DefaultTagErrorRenderer
class="something"
class="error"
class="foo"
class="error foo"
error
foo
TagErrorRenderer
TagErrorRenderer
TagErrorRendererFactory
TagErrorRenderer
InputTagSupport
TagErrorRenderer
TagErrorRenderer
Extension.Packages
ActionResolver.Packages
.*
:encoding
en_US:UTF-8
validate()
stripes.jar
stripes.jar
/WEB-INF/lib
<%@ taglib prefix="stripes" uri="http://stripes.sourceforge.net/stripes.tld" %>
<%@ taglib prefix="stripes" uri="http://stripes.sourceforge.net/stripes-dynattr.tld" %>
DefaultPopulationStrategy
DefaultPopulationStrategy
DefaultPopulationStrategy
getValue(InputTagSupport tag)
FileBean
InputStream
FileBean.delete()
save()
FileBean.delete()
MultipartWrapper
MultipartWrapper
add
divide
ValidationErrorHandler
handleValidationErrors
div
StreamingResolution
StreamingResolution
JavaScriptBuilder
JavaScriptResolution
Resolution
1.5.x> mvn clean install
1.5.x> mvn clean install -Dmaven.test.skip
1.5.x> mvn clean install -Pwebtests
1.5.x/stripes> mvn clean install
1.5.x/tests> mvn clean install
1.5.x/webtests> mvn clean install
lib/freemarker.jar
WEB-INF/lib/freemarker.jar
*.ftl
TemplatePath
assign
<stripes:tagname attr="value"/>
[@s.tagname attr="value"
actionBean
layout-render
[/@]
actionBean.user.name
actionBean.user.name!
actionBean.user.name!'New User'
<stripes:text name="foo" value="${actionBean.user.dateOfBirth}"/>
java.util.Date
[@s.text name="foo" value="${actionBean.user.dateOfBirth}"/]
[@s.text name="foo" value=actionBean.user.dateOfBirth/]
